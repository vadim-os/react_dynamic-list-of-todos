{"version":3,"sources":["User.js","TodoItem.js","TodoList.js","App.js","api/todosApi.js","api/usersApi.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","name","TodoItem","todo","Fragment","id","title","src_User","completed","TodoList","todos","sortTodos","onClick","map","src_TodoItem","key","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","isLoaded","setLoaded","_useState7","_useState8","isSortedBy","setSortedBy","className","type","_ref2","todosFromServer","usersFromServer","preparedTodos","regenerator_default","async","_context","prev","next","awrap","Promise","all","fetch","then","response","json","sent","find","item","userId","objectSpread2","stop","src_TodoList","sortBy","toConsumableArray","reverse","sort","b","localeCompare","toString","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e5eda7ae.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>{user.name}</td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape(\n    { name: PropTypes.string }\n  ).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <>\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <User user={todo.user} />\n      <td>{todo.completed ? 'Done' : 'In progress'}</td>\n    </tr>\n  </>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, sortTodos }) => (\n  <table>\n    <tbody>\n      <tr>\n        <th onClick={() => sortTodos('id')}>\n          ID\n        </th>\n        <th onClick={() => sortTodos('title')}>\n          Title\n        </th>\n        <th onClick={() => sortTodos('user')}>\n          User\n        </th>\n        <th onClick={() => sortTodos('status')}>\n          Status\n        </th>\n      </tr>\n      {todos.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { getTodos } from './api/todosApi';\nimport { getUsers } from './api/usersApi';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n  const [isSortedBy, setSortedBy] = useState('');\n\n  const loadTodos = async() => {\n    setLoading(true);\n\n    const [todosFromServer, usersFromServer] = await Promise.all(\n      [getTodos(), getUsers()]\n    );\n\n    const preparedTodos = todosFromServer.map((todo) => {\n      const user = usersFromServer.find(item => item.id === todo.userId);\n\n      return {\n        ...todo, user,\n      };\n    });\n\n    setTodos(preparedTodos);\n    setLoaded(true);\n    setLoading(false);\n  };\n\n  const sortTodos = (sortBy) => {\n    if (sortBy === isSortedBy) {\n      setTodos([...todos].reverse());\n    } else {\n      switch (sortBy) {\n        case 'title':\n          setTodos([...todos]\n            .sort((a, b) => a.title.localeCompare(b.title)));\n          break;\n        case 'user':\n          setTodos([...todos]\n            .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n          break;\n        case 'status':\n          setTodos([...todos]\n            .sort((a, b) => b.completed.toString().localeCompare(\n              a.completed.toString()\n            )));\n          break;\n        default:\n          setTodos([...todos]\n            .sort((a, b) => a.id - b.id));\n      }\n      setSortedBy(sortBy);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {!isLoaded && !isLoading\n        ? (\n          <button\n            type=\"button\"\n            onClick={loadTodos}\n          >\n            Load list of Todos\n          </button>\n        )\n        : ''\n      }\n      {isLoading ? (<h3>Loading... Please wait...</h3>) : ''}\n      {isLoaded ? <TodoList todos={todos} sortTodos={sortTodos} /> : ''}\n    </div>\n  );\n};\n\nexport default App;\n","const URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodos = () => fetch(URL)\n  .then(response => response.json());\n","const URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(URL)\n  .then(response => response.json());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}