{"version":3,"sources":["User.js","TodoItem.js","TodoList.js","App.js","api/todosApi.js","api/usersApi.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","name","TodoItem","todo","Fragment","id","title","src_User","completed","TodoList","todos","sortTodos","href","onClick","map","src_TodoItem","key","App","_useState","useState","_useState2","Object","slicedToArray","saveTodos","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","isLoaded","setLoaded","className","type","todosFromServer","usersFromServer","preparedTodos","regenerator_default","async","_context","prev","next","awrap","fetch","then","response","json","sent","find","item","userId","objectSpread2","stop","src_TodoList","sortBy","toConsumableArray","sort","b","localeCompare","toString","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.04189461.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>{user.name}</td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape(\n    { name: PropTypes.string }\n  ).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <>\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <User user={todo.user} />\n      <td>{todo.completed ? 'Done' : 'In progress'}</td>\n    </tr>\n  </>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, sortTodos }) => (\n  <table>\n    <tbody>\n      <tr>\n        <th>\n          <a\n            href=\"#/\"\n            onClick={() => sortTodos('id')}\n          >\nID\n          </a>\n        </th>\n        <th>\n          <a\n            href=\"#/\"\n            onClick={() => sortTodos('title')}\n          >\nTitle\n          </a>\n        </th>\n        <th>\n          <a\n            href=\"#/\"\n            onClick={() => sortTodos('user')}\n          >\nUser\n          </a>\n        </th>\n        <th>\n          <a\n            href=\"#/\"\n            onClick={() => sortTodos('status')}\n          >\nStatus\n          </a>\n        </th>\n      </tr>\n      {todos.map(todo => <TodoItem todo={todo} key={todo.id} />)}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { getTodos } from './api/todosApi';\nimport { getUsers } from './api/usersApi';\n\nconst App = () => {\n  const [todos, saveTodos] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const loadTodos = async() => {\n    setLoading(true);\n\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUsers();\n\n    const preparedTodos = todosFromServer.map((todo) => {\n      const user = usersFromServer.find(item => item.id === todo.userId);\n\n      return {\n        ...todo, user,\n      };\n    });\n\n    saveTodos(preparedTodos);\n    setLoaded(true);\n    setLoading(false);\n  };\n\n  const sortTodos = (sortBy) => {\n    switch (sortBy) {\n      case 'title':\n        saveTodos([...todos]\n          .sort((a, b) => a.title.localeCompare(b.title)));\n        break;\n      case 'user':\n        saveTodos([...todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n        break;\n      case 'status':\n        saveTodos([...todos]\n          .sort((a, b) => b.completed.toString().localeCompare(\n            a.completed.toString()\n          )));\n        break;\n      default:\n        saveTodos([...todos]\n          .sort((a, b) => a.id - b.id));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {!isLoaded && !isLoading\n        ? (\n          <button\n            type=\"button\"\n            onClick={loadTodos}\n          >\n            Load list of Todos\n          </button>\n        )\n        : ''\n      }\n      {isLoading ? (<h3>Loading... Please wait...</h3>) : ''}\n      {isLoaded ? <TodoList todos={todos} sortTodos={sortTodos} /> : ''}\n    </div>\n  );\n};\n\nexport default App;\n","const URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodos = () => fetch(URL)\n  .then(response => response.json());\n","const URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(URL)\n  .then(response => response.json());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}